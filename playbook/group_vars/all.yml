---
private_ip: "{{ ansible_all_ipv4_addresses | ipaddr('10.0.0.0/8') | first }}"
sysctl_overwrite:
  net.ipv6.conf.all.disable_ipv6: 1

  # With the following settings, your application will detect dead TCP
  # connections after 120 seconds (60s + 10s + 10s + 10s + 10s + 10s + 10s).
  net.ipv4.tcp_keepalive_intvl: 10
  net.ipv4.tcp_keepalive_probes: 6
  net.ipv4.tcp_keepalive_time: 60

ssh_permit_root_login: without-password
ssh_kex:
  - curve25519-sha256@libssh.org
  - diffie-hellman-group-exchange-sha256

ssh_ciphers:
  - chacha20-poly1305@openssh.com
  - aes256-gcm@openssh.com
  - aes128-gcm@openssh.com
  - aes256-ctr
  - aes192-ctr
  - aes128-ctr

ssh_macs:
  - umac-128-etm@openssh.com
  - umac-64-etm@openssh.com
  - hmac-sha2-512-etm@openssh.com
  - hmac-sha2-256-etm@openssh.com
  - umac-128@openssh.com
  - umac-64@openssh.com
  - hmac-sha2-512
  - hmac-sha2-256

ssh_host_key_algorithms:
  - ssh-ed25519-cert-v01@openssh.com
  - ssh-rsa-cert-v01@openssh.com
  - ssh-ed25519
  - ssh-rsa

common_packages:
  - apt-transport-https
  - ca-certificates
  - cron
  - curl
  - diffutils
  - dnsutils
  - git
  - gnupg
  - htop
  - iftop
  - iotop
  - net-tools
  - nmap
  - telnet

ansible_ssh_user: debian

consul_node_role: client
# TODO: /!\ This is not secure do not use this in production at anytime
consul_raw_key: "y5vPZpzeALhaTlc2c5rJbzrplx34A/afro9SAMhiTK4="
consul_version: 1.8.4
consul_group_name: meta-role_consul_server
# FIXME: this will not be always eth1 when we use ONLY private network
consul_iface: eth1
consul_recursors:
  - 213.186.33.99
  - 8.8.8.8
consul_dnsmasq_enable: true
consul_dnsmasq_bind_interfaces: true
consul_dnsmasq_listen_addresses:
  - 127.0.0.1

node_exporter_version: 1.0.1
node_exporter_web_listen_address: "localhost:9100"
node_exporter_enabled_collectors:
  - cpu
  - diskstats
  - filesystem
  - loadavg
  - meminfo
  - netclass
  - netdev
  - netstat
  - processes
  - systemd
  - tcpstat

consul_services:
  - name: "node-exporter"
    id: "node-exporter"
    address: "{{ private_ip }}"
    port: 8888
    checks:
      - tcp: "localhost:9100"
        interval: "10s"
  - name: "nginx-exporter"
    id: "nginx-exporter"
    address: "{{ private_ip }}"
    port: 8888
    checks:
      - tcp: "localhost:8080"
        interval: "10s"

postgresql_version: 12

nginx_config_cleanup: true

nginx_config_http_template_enable: true
nginx_config_http_template:
  app:
    template_file: http/default.conf.j2
    conf_file_name: default.conf
    conf_file_location: /etc/nginx/conf.d/
    proxy_cache:
      proxy_cache_path:
        - path: /tmp/cache
          # Having a large number of files in a single directory can slow down
          # file access, so we recommend a two‑level directory hierarchy for
          # most deployments
          levels: "1:2"
          inactive: 1m
          max_size: 2g
          use_temp_path: false
          keys_zone:
            name: exporter
            # 10‑MB zone configured in the example can store data for about
            # 80,000 keys
            size: 10m
    servers:
      main:
        listen:
          listen_localhost:
            port: 8888
            ip: "{{ private_ip }}"
        server_name: localhost
        access_log:
          - name: main
            location: /var/log/nginx/access.log
        reverse_proxy:
          locations:
            node_exporter:
              location: /node_exporter/
              proxy_cache: exporter
              proxy_pass: "http://localhost:9100/"
              proxy_cache_background_update: false
              proxy_cache_lock: true
              proxy_cache_min_uses: 1
              proxy_set_header:
                header_host:
                  name: Host
                  value: $host
            nginx_exporter:
              location: /nginx_exporter/
              proxy_cache: exporter
              proxy_pass: "http://localhost:9113/"
              proxy_cache_background_update: false
              proxy_cache_lock: true
              proxy_cache_min_uses: 1
              proxy_set_header:
                header_host:
                  name: Host
                  value: $host

# Enable status reporting so we can expose nginx metrics
nginx_config_status_enable: true
nginx_config_status_port: 127.0.0.1:8080

nginx_exporter_version: 0.8.0
nginx_exporter_tarball_checksum: sha256:fce51ce62650186f9f4cb3ff13fa4b36ffc2980058a63bccdb471c929c078e50
nginx_exporter_options:
  - '-nginx.scrape-uri=http://localhost:8080/nginx_status'
  - '-web.listen-address=localhost:9113'
